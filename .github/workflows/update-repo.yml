name: Update APT Repository

on:
  release:
    types: [published]
  workflow_dispatch:

jobs:
  update-repo:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        
    - name: Install reprepro
      run: |
        sudo apt-get update
        sudo apt-get install -y reprepro gnupg2
        
    - name: Setup GPG key
      run: |
        echo "${{ secrets.GPG_PRIVATE_KEY }}" | gpg --import --batch
        echo "${{ secrets.GPG_PASSPHRASE }}" | gpg --batch --yes --passphrase-fd 0 --pinentry-mode loopback --export-secret-keys > /tmp/secret.key
        gpg --import /tmp/secret.key
        rm /tmp/secret.key
        echo "default-key ${{ secrets.GPG_KEY_ID }}" >> ~/.gnupg/gpg.conf
        echo "use-agent" >> ~/.gnupg/gpg.conf
        echo "pinentry-mode loopback" >> ~/.gnupg/gpg.conf
        
    - name: Download release assets
      id: download
      run: |
        # Create incoming directory for packages
        mkdir -p incoming
        
        # Get release information
        if [ "${{ github.event_name }}" = "release" ]; then
          RELEASE_TAG="${{ github.event.release.tag_name }}"
        else
          # For manual trigger, get latest release
          RELEASE_TAG=$(curl -s https://api.github.com/repos/${{ github.repository }}/releases/latest | jq -r .tag_name)
        fi
        
        echo "Processing release: $RELEASE_TAG"
        
        # Download .deb files from the release
        curl -s https://api.github.com/repos/${{ github.repository }}/releases/tags/$RELEASE_TAG \
          | jq -r '.assets[] | select(.name | endswith(".deb")) | .browser_download_url' \
          | while read url; do
            echo "Downloading: $url"
            wget -P incoming/ "$url"
          done
          
        # List downloaded files
        ls -la incoming/
        
    - name: Update repository with reprepro
      run: |
        # Initialize repository if needed
        if [ ! -d "dists" ]; then
          reprepro -b . export stable
        fi
        
        # Add packages to repository
        for deb in incoming/*.deb; do
          if [ -f "$deb" ]; then
            echo "Adding package: $deb"
            reprepro -b . includedeb stable "$deb"
          fi
        done
        
        # Generate repository metadata
        reprepro -b . export stable
        
    - name: Build & Deploy Worker
      uses: cloudflare/wrangler-action@v3
      with:
        apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
        accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
        
    - name: Commit and push changes
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add .
        git commit -m "Update APT repository for release ${{ github.event.release.tag_name || 'latest' }}" || exit 0
        git push
