name: Update APT Repository

on:
  release:
    types: [published]
  workflow_dispatch:

permissions:
  contents: write

jobs:
  update-repo:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
        
    - name: Install dependencies
      run: sudo apt-get update && sudo apt-get install -y reprepro gnupg2 debsigs
        
    - name: Setup GPG
      env:
        GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}
        GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
        GPG_KEY_ID: ${{ secrets.GPG_KEY_ID }}
      run: |
        echo "$GPG_PRIVATE_KEY" | gpg --import --batch
        cat >> ~/.gnupg/gpg.conf << EOF
        use-agent
        pinentry-mode loopback
        batch
        yes
        cert-digest-algo SHA256
        digest-algo SHA256
        EOF
        echo "test" | gpg --batch --yes --passphrase "$GPG_PASSPHRASE" \
          --pinentry-mode loopback --default-key "$GPG_KEY_ID" \
          --clearsign > /dev/null
        
    - name: Download and sign packages
      env:
        GPG_KEY_ID: ${{ secrets.GPG_KEY_ID }}
      run: |
        mkdir -p incoming
        
        RELEASE_TAG="${{ github.event.release.tag_name || 'latest' }}"
        if [ "$RELEASE_TAG" = "latest" ]; then
          RELEASE_TAG=$(curl -s https://api.github.com/repos/${{ github.repository }}/releases/latest | jq -r .tag_name)
        fi
        
        curl -s https://api.github.com/repos/${{ github.repository }}/releases/tags/$RELEASE_TAG \
          | jq -r '.assets[] | select(.name | endswith(".deb")) | .browser_download_url' \
          | xargs -I {} wget -P incoming/ {}
          
        for deb in incoming/*.deb; do
          [ -f "$deb" ] && debsigs --sign=origin --default-key="$GPG_KEY_ID" "$deb"
        done
        
    - name: Update repository
      run: |
        DISTRIBUTION="alpha"
        
        [ ! -d "dists" ] && reprepro -b . export $DISTRIBUTION
        
        for deb in incoming/*.deb; do
          [ -f "$deb" ] && reprepro -b . includedeb $DISTRIBUTION "$deb"
        done
        
        mkdir -p public/dists
        reprepro -b . --outdir public export $DISTRIBUTION
        
    - name: Deploy
      uses: cloudflare/wrangler-action@v3
      with:
        apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
        accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
        
    - name: Commit changes
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "github-actions"
        git add . && git commit -m "Update APT repository" || true
        git push
